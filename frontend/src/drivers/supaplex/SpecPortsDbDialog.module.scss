@use "styles/themes";

.dialog {
  height: calc(100% - 2 * 0.5em);
  min-height: 500px;
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: auto minmax(0, 1fr) auto;
}
.root {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: auto minmax(0, 1fr);
}

.info {
  margin-top: 0;
  display: flex;
  align-items: flex-start;

  > span {
    flex: 1 1 0;
  }
  > button {
    flex: 0 0 auto;
    margin-left: 1rem;
  }
}

.error {
  color: themes.$color-danger;
}

.list {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  overflow-y: auto;
}
.textarea {
}

.item {
  //margin-top: 0.1rem;
  padding: 0 0.5rem;
  display: grid;
  grid-gap: 0.2rem;
  grid-template-areas: "index tile xy g z e u handle";
  grid-template-columns:
    calc(1ch * (var(--idx-chars, 2) + 0.75)) 1.75rem minmax(5rem, 1fr)
    repeat(4, 12%) min-content;
  align-items: center;
  cursor: auto;

  &:nth-child(even) {
    background-color: rgba(128, 128, 128, 0.25);
  }

  .index {
    grid-area: index;
  }
  .tile {
    grid-area: tile;
  }
  .xy {
    grid-area: xy;
  }
  .g {
    grid-area: g;
  }
  .z {
    grid-area: z;
  }
  .e {
    grid-area: e;
  }
  .u {
    grid-area: u;
  }
  //.std{}
  .handle {
    grid-area: handle;
    cursor: grab;
  }
}
