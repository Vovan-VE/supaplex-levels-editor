// [032]      [048] 0    [064] @    [080] P    [096] `    [112] p
// [033] !    [049] 1    [065] A    [081] Q    [097] a    [113] q
// [034] "    [050] 2    [066] B    [082] R    [098] b    [114] r
// [035] #    [051] 3    [067] C    [083] S    [099] c    [115] s
// [036] $    [052] 4    [068] D    [084] T    [100] d    [116] t
// [037] %    [053] 5    [069] E    [085] U    [101] e    [117] u
// [038] &    [054] 6    [070] F    [086] V    [102] f    [118] v
// [039] '    [055] 7    [071] G    [087] W    [103] g    [119] w
// [040] (    [056] 8    [072] H    [088] X    [104] h    [120] x
// [041] )    [057] 9    [073] I    [089] Y    [105] i    [121] y
// [042] *    [058] :    [074] J    [090] Z    [106] j    [122] z
// [043] +    [059] ;    [075] K    [091] [    [107] k    [123] {
// [044] ,    [060] <    [076] L    [092] \    [108] l    [124] |
// [045] -    [061] =    [077] M    [093] ]    [109] m    [125] }
// [046] .    [062] >    [078] N    [094] ^    [110] n    [126] ~
// [047] /    [063] ?    [079] O    [095] _    [111] o

export const FANCY: ReadonlyMap<number, number> = new Map([
  // , => .
  [44, 46],

  // 0 => #
  // 1 => #
  // 2 => #
  [48, 35],
  [49, 35],
  [50, 35],
]);

export const BORDERS: ReadonlySet<number> = new Set([35]);
