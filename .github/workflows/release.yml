name: Release

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

# Allow one concurrent deployment
concurrency:
  group: "release"
  cancel-in-progress: true

jobs:
  build_front:
    name: Build frontend with NPM
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.current-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json

      - name: Extract version
        id: extract_version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./frontend

      - name: Run npm
        working-directory: ./frontend
        run: |
          npm ci --omit=dev
          make web
          make wails
        env:
          CI: true

      - name: Get release changelog
        run: |
          ./frontend/scripts/get-release-notes.sh < ./CHANGELOG.md > ./THIS-CHANGELOG.md

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./frontend/dist/docs

      - name: Upload web artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

      - name: Upload desktop artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-front
          path: ./frontend/dist-wails/

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-data
          path: ./THIS-CHANGELOG.md

  build_desktop:
    name: Build desktop apps
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        #platform: [ ubuntu-latest, macos-latest ]
        go-version: [ 1.20.3 ]
    runs-on: ${{ matrix.platform }}
    needs: build_front
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev nsis

      - name: Download desktop front artifact
        uses: actions/download-artifact@v4
        with:
          name: desktop-front
          path: frontend/dist-wails

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@"$( go list -f "{{.Module.Version}}" github.com/wailsapp/wails/v2 )"
          wails doctor

      - name: Build
        run: make all clean-bin-os
        env:
          SKIP_FRONT: 1
          SKIP_FRONT_CLEAN: ""
          VERSION: ${{ needs.build_front.outputs.version }}

      - name: Upload desktop artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-bin-${{ matrix.platform }}
          path: ./build/bin/*

  release_desktop:
    name: Draft Release
    environment:
      name: release-draft
    runs-on: ubuntu-latest
    needs:
      - build_front
      - build_desktop
    steps:
      - name: Download app artifacts from linux
        uses: actions/download-artifact@v4
        with:
          name: desktop-bin-ubuntu-latest
          path: ./release-files

#      - name: Download app artifacts from mac
#        uses: actions/download-artifact@v4
#        with:
#          name: desktop-bin-macos-latest
#          #path: ./release-files

      - name: Prepare release files
        working-directory: ./release-files
        run: |
          FILES="$( ls )"
          for FILE in $FILES ; do
            md5sum $FILE > $FILE.md5.txt
            sha1sum $FILE > $FILE.sha1.txt
          done
          cat *.txt

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-data
          path: .

      - name: Draft release
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          draft: true
          prerelease: false
          tag_name: "v${{ needs.build_front.outputs.version }}"
          name: "v${{ needs.build_front.outputs.version }}"
          body_path: ./THIS-CHANGELOG.md
          files: |
            ./release-files/*.exe
            ./release-files/*.deb
            ./release-files/*.zip
            ./release-files/*.txt

  deploy_web:
    name: Deploy web with GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs:
      - build_front
      - release_desktop
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
