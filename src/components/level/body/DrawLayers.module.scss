.root {
}

%_starts_xy {
  grid-column-start: calc(1 + var(--x));
  grid-row-start: calc(1 + var(--y));
}
%_span_1x1 {
  grid-column-end: span 1;
  grid-row-end: span 1;
}
%_span_wh {
  grid-column-end: span var(--w);
  grid-row-end: span var(--h);
}

.typeTiles {
  > * {
    @extend %_starts_xy, %_span_1x1;
  }
}
.typeTileFill {
  > * {
    @extend %_starts_xy, %_span_wh;
    background-size: var(--tile-size);
    background-repeat: repeat;
    aspect-ratio: auto;
  }
}
.typeSelectRange {
  > * {
    @extend %_starts_xy, %_span_wh;
    background: rgba(255, 255, 255, 0.4);
    position: relative;

    &._bt,
    &._br,
    &._bb,
    &._bl {
      &::before,
      &::after {
        content: " ";
        position: absolute;
        inset: 0;
      }
      &::before {
        border: #fff solid 2px;
      }
      &::after {
        border: #000 dotted 2px;
      }
    }
    &._bt::after {
      border-top-style: dashed;
    }
    &._br::after {
      border-right-style: dashed;
    }
    &._bb::after {
      border-bottom-style: dashed;
    }
    &._bl::after {
      border-left-style: dashed;
    }
  }
}

.typeFeedback {
  .cell {
    @extend %_starts_xy, %_span_1x1;

    border: black solid 1px;
    box-shadow: inset 0 0 0 1px #fff;
  }

  &:global(.tool-pen-x3) .cell {
    grid-column-start: max(1, var(--x));
    grid-row-start: max(1, var(--y));
    grid-column-end: calc(3 + var(--x));
    grid-row-end: calc(3 + var(--y));
  }
}
